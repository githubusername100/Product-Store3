{"ast":null,"code":"var _jsxFileName = \"D:\\\\p-store\\\\product-store\\\\src\\\\pages\\\\CreateProductPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Used to navigate programmatically after product creation\nimport { createProduct } from '../services/api'; // Custom API function to create a product\nimport axios from 'axios'; // Axios is used to handle image upload request\nimport './CreateProductPage.css'; // CSS styles for the page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateProductPage() {\n  _s();\n  // ✅ Component state for storing form data\n  const [product, setProduct] = useState({\n    name: '',\n    description: '',\n    price: '',\n    image: ''\n  });\n  const navigate = useNavigate(); // React Router hook to navigate after form submission\n\n  // ✅ Handle input field changes\n  const handleChange = e => {\n    setProduct({\n      ...product,\n      [e.target.name]: e.target.value\n    }); // Update form state based on input name\n  };\n\n  // ✅ Handle image file upload\n  const handleImageUpload = async e => {\n    const formData = new FormData(); // Create a FormData object to send file\n    formData.append('image', e.target.files[0]); // Append the selected file\n\n    try {\n      // Send POST request to backend upload endpoint\n      const res = await axios.post('http://localhost:5000/api/products/upload', formData);\n\n      // Update image path in state (res.data.imageUrl should contain `/uploads/filename.jpg`)\n      setProduct(prev => ({\n        ...prev,\n        image: res.data.imageUrl\n      }));\n    } catch (err) {\n      console.error('Upload failed', err); // Log any error\n    }\n  };\n\n  // ✅ Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form reload behavior\n    try {\n      await createProduct(product); // Call API to create product with form data\n      navigate('/products'); // Redirect to product list page\n    } catch (err) {\n      console.error('Failed to create product:', err); // Log error if API fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"create-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"Product Name\",\n        value: product.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Product Description\",\n        value: product.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"price\",\n        type: \"number\",\n        placeholder: \"Price\",\n        value: product.price,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), product.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000${product.image}` // Full URL to preview the image\n        ,\n        alt: \"Preview\",\n        className: \"preview-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateProductPage, \"GwM2uxteBRnAGRpo7raI/Nzx/AQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProductPage;\nexport default CreateProductPage;\nvar _c;\n$RefreshReg$(_c, \"CreateProductPage\");","map":{"version":3,"names":["React","useState","useNavigate","createProduct","axios","jsxDEV","_jsxDEV","CreateProductPage","_s","product","setProduct","name","description","price","image","navigate","handleChange","e","target","value","handleImageUpload","formData","FormData","append","files","res","post","prev","data","imageUrl","err","console","error","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","type","accept","src","alt","_c","$RefreshReg$"],"sources":["D:/p-store/product-store/src/pages/CreateProductPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Used to navigate programmatically after product creation\r\nimport { createProduct } from '../services/api'; // Custom API function to create a product\r\nimport axios from 'axios'; // Axios is used to handle image upload request\r\nimport './CreateProductPage.css'; // CSS styles for the page\r\n\r\nfunction CreateProductPage() {\r\n  // ✅ Component state for storing form data\r\n  const [product, setProduct] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    image: ''\r\n  });\r\n\r\n  const navigate = useNavigate(); // React Router hook to navigate after form submission\r\n\r\n  // ✅ Handle input field changes\r\n  const handleChange = (e) => {\r\n    setProduct({ ...product, [e.target.name]: e.target.value }); // Update form state based on input name\r\n  };\r\n\r\n  // ✅ Handle image file upload\r\n  const handleImageUpload = async (e) => {\r\n    const formData = new FormData(); // Create a FormData object to send file\r\n    formData.append('image', e.target.files[0]); // Append the selected file\r\n\r\n    try {\r\n      // Send POST request to backend upload endpoint\r\n      const res = await axios.post('http://localhost:5000/api/products/upload', formData);\r\n      \r\n      // Update image path in state (res.data.imageUrl should contain `/uploads/filename.jpg`)\r\n      setProduct(prev => ({ ...prev, image: res.data.imageUrl }));\r\n    } catch (err) {\r\n      console.error('Upload failed', err); // Log any error\r\n    }\r\n  };\r\n\r\n  // ✅ Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent default form reload behavior\r\n    try {\r\n      await createProduct(product); // Call API to create product with form data\r\n      navigate('/products'); // Redirect to product list page\r\n    } catch (err) {\r\n      console.error('Failed to create product:', err); // Log error if API fails\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-container\">\r\n      <h2>Create Product</h2>\r\n      <form onSubmit={handleSubmit} className=\"create-form\">\r\n        {/* Input for product name */}\r\n        <input\r\n          name=\"name\"\r\n          placeholder=\"Product Name\"\r\n          value={product.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        \r\n        {/* Textarea for product description */}\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Product Description\"\r\n          value={product.description}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        {/* Input for product price */}\r\n        <input\r\n          name=\"price\"\r\n          type=\"number\"\r\n          placeholder=\"Price\"\r\n          value={product.price}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        {/* File input for image upload */}\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleImageUpload}\r\n          accept=\"image/*\"\r\n        />\r\n\r\n        {/* ✅ Image preview (if uploaded) */}\r\n        {product.image && (\r\n          <img\r\n            src={`http://localhost:5000${product.image}`} // Full URL to preview the image\r\n            alt=\"Preview\"\r\n            className=\"preview-image\"\r\n          />\r\n        )}\r\n\r\n        {/* Submit button */}\r\n        <button type=\"submit\">Create Product</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateProductPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}